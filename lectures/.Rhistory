colnames(newdata)<-'Precip'
prednew<-predict.lm(Pmod, newdata=newdata,se.fit=T)
plot(Precip,s1avg$mean[18:36], pch=19,ylab=expression("Establishment rate (20yrs"^-1~")"),xlab=expression("Mean max precipitation (cm 20yrs"^-1~")"))
lines(newdata$Precip,prednew$fit,lwd=3)
polygon(c(newdata$Precip,rev(newdata$Precip)),c((prednew$fit+prednew$se.fit),rev((prednew$fit-prednew$se.fit))),col = alpha("grey75",.75), border = FALSE)
text(15.5,0.45,labels=paste("Correlation=",round(cor(Temp,s1avg$mean[18:37]),2)))
text(15.5,0.47,labels=paste("Slope=",round(Tmod$coefficients[2],2)))
fig_label("B",region="plot", cex=2)
range(precip)
range(Precip)
precip<-read.table("PrecipRecords.txt")#import reconstructed precip data
bins20<-seq(1600,1980,by=20)
Precip<-numeric(length(bins20)-1)
for(i in 2:length(bins20)){
Precip[i-1]<-mean(precip$V2[which(precip$V1>=bins20[i-1] & precip$V1<bins20[i])],na.rm=T)
}
layout(mat=matrix(c(1,1,1,1,2,2),1,6))
par(mar = c(4.5,4.6,4,4.5))
plot(seq(1600,1980,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue', ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
polygon(c(s1avg$years[18:37],rev(s1avg$years[18:37])),c((s1avg$upper[18:37]),rev((s1avg$lower[18:37]))),col = alpha("grey75",.75), border = FALSE)
lines(seq(1600,1980,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue')
par(new=T)
plot(seq(1600,1980,by=20),Precip, type='l',col='coral',lwd=3,axes = FALSE, bty = "n", xlab = "", ylab = "",ylim=c(24,31))
axis(side=4, col.axis="coral" ,col="coral" )
mtext(expression("Mean annual precipitation (cm 20yrs"^-1~")"),side=4,col="coral",line=2.5,cex=0.7)
fig_label("A",region="plot", cex=2)
precip<-read.table("PrecipRecords.txt")#import reconstructed precip data
bins20<-seq(1600,1980,by=20)
Precip<-numeric(length(bins20)-1)
for(i in 2:length(bins20)){
Precip[i-1]<-mean(precip$V2[which(precip$V1>=bins20[i-1] & precip$V1<bins20[i])],na.rm=T)
}
layout(mat=matrix(c(1,1,1,1,2,2),1,6))
par(mar = c(4.5,4.6,4,4.5))
plot(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue', ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
polygon(c(s1avg$years[18:37],rev(s1avg$years[18:37])),c((s1avg$upper[18:37]),rev((s1avg$lower[18:37]))),col = alpha("grey75",.75), border = FALSE)
lines(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue')
par(new=T)
plot(seq(1600,1960,by=20),Precip, type='l',col='coral',lwd=3,axes = FALSE, bty = "n", xlab = "", ylab = "",ylim=c(24,31))
axis(side=4, col.axis="coral" ,col="coral" )
mtext(expression("Mean annual precipitation (cm 20yrs"^-1~")"),side=4,col="coral",line=2.5,cex=0.7)
fig_label("A",region="plot", cex=2)
layout(mat=matrix(c(1,1,1,1,2,2),1,6))
par(mar = c(4.5,4.6,4,4.5))
plot(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue', ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
polygon(c(s1avg$years[18:37],rev(s1avg$years[18:37])),c((s1avg$upper[18:37]),rev((s1avg$lower[18:37]))),col = alpha("grey75",.75), border = FALSE)
lines(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue')
par(new=T)
plot(seq(1600,1960,by=20),Precip, type='l',col='coral',lwd=3,axes = FALSE, bty = "n", xlab = "", ylab = "",ylim=c(22,33))
axis(side=4, col.axis="coral" ,col="coral" )
mtext(expression("Mean annual precipitation (cm 20yrs"^-1~")"),side=4,col="coral",line=2.5,cex=0.7)
fig_label("A",region="plot", cex=2)
cor(Precip,s1avg$mean[18:36])
Pmod<-lm(s1avg$mean[18:36]~Precip)
summary(Pmod)
newdata=as.data.frame(seq(14.5,16.5,length=20))
colnames(newdata)<-'Precip'
prednew<-predict.lm(Pmod, newdata=newdata,se.fit=T)
plot(Precip,s1avg$mean[18:36], pch=19,ylab=expression("Establishment rate (20yrs"^-1~")"),xlab=expression("Mean max precipitation (cm 20yrs"^-1~")"))
lines(newdata$Precip,prednew$fit,lwd=3)
polygon(c(newdata$Precip,rev(newdata$Precip)),c((prednew$fit+prednew$se.fit),rev((prednew$fit-prednew$se.fit))),col = alpha("grey75",.75), border = FALSE)
cor(Precip,s1avg$mean[18:36])
Pmod<-lm(s1avg$mean[18:36]~Precip)
summary(Pmod)
newdata=as.data.frame(seq(14.5,16.5,length=20))
colnames(newdata)<-'Precip'
prednew<-predict.lm(Pmod, newdata=newdata,se.fit=T)
plot(Precip,s1avg$mean[18:36], pch=19,ylab=expression("Establishment rate (20yrs"^-1~")"),xlab=expression("Mean annual precipitation (cm 20yrs"^-1~")"))
lines(newdata$Precip,prednew$fit,lwd=3)
polygon(c(newdata$Precip,rev(newdata$Precip)),c((prednew$fit+prednew$se.fit),rev((prednew$fit-prednew$se.fit))),col = alpha("grey75",.75), border = FALSE)
Pmod<-lm(s1avg$mean[18:36]~Precip+tempdir())
precip<-read.table("PrecipRecords.txt")#import reconstructed precip data
bins20<-seq(1600,1980,by=20)
Precip<-numeric(length(bins20)-1)
for(i in 2:length(bins20)){
Precip[i-1]<-mean(precip$V2[which(precip$V1>=bins20[i-1] & precip$V1<bins20[i])],na.rm=T)
}
layout(mat=matrix(c(1,1,1,1,2,2),1,6))
par(mar = c(4.5,4.6,4,4.5))
plot(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue', ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
polygon(c(s1avg$years[18:37],rev(s1avg$years[18:37])),c((s1avg$upper[18:37]),rev((s1avg$lower[18:37]))),col = alpha("grey75",.75), border = FALSE)
lines(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue')
par(new=T)
plot(seq(1600,1960,by=20),Precip, type='l',col='coral',lwd=3,axes = FALSE, bty = "n", xlab = "", ylab = "",ylim=c(22,33))
axis(side=4, col.axis="coral" ,col="coral" )
mtext(expression("Mean annual precipitation (cm 20yrs"^-1~")"),side=4,col="coral",line=2.5,cex=0.7)
fig_label("A",region="plot", cex=2)
cor(Precip,s1avg$mean[18:36])
Pmod<-lm(s1avg$mean[18:36]~Precip)
summary(Pmod)
newdata=as.data.frame(seq(14.5,16.5,length=20))
colnames(newdata)<-'Precip'
prednew<-predict.lm(Pmod, newdata=newdata,se.fit=T)
plot(Precip,s1avg$mean[18:36], pch=19,ylab=expression("Establishment rate (20yrs"^-1~")"),xlab=expression("Mean annual precipitation (cm 20yrs"^-1~")"))
text(26,0.45,labels=paste("Correlation=",round(cor(Precip,s1avg$mean[18:36]),2)))
fig_label("B",region="plot", cex=2)
precip<-read.table("PrecipRecords.txt")#import reconstructed precip data
bins20<-seq(1600,1980,by=20)
Precip<-numeric(length(bins20)-1)
for(i in 2:length(bins20)){
Precip[i-1]<-mean(precip$V2[which(precip$V1>=bins20[i-1] & precip$V1<bins20[i])],na.rm=T)
}
layout(mat=matrix(c(1,1,1,1,2,2),1,6))
par(mar = c(4.5,4.6,4,4.5))
plot(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue', ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
polygon(c(s1avg$years[18:37],rev(s1avg$years[18:37])),c((s1avg$upper[18:37]),rev((s1avg$lower[18:37]))),col = alpha("grey75",.75), border = FALSE)
lines(seq(1600,1960,by=20),s1avg$mean[18:36], type='l', ylim=c(0,0.8),lwd=3,col='steelblue')
par(new=T)
plot(seq(1600,1960,by=20),Precip, type='l',col='coral',lwd=3,axes = FALSE, bty = "n", xlab = "", ylab = "",ylim=c(22,33))
axis(side=4, col.axis="coral" ,col="coral" )
mtext(expression("Mean annual precipitation (cm 20yrs"^-1~")"),side=4,col="coral",line=2.5,cex=0.7)
fig_label("A",region="plot", cex=2)
cor(Precip,s1avg$mean[18:36])
Pmod<-lm(s1avg$mean[18:36]~Precip)
summary(Pmod)
newdata=as.data.frame(seq(14.5,16.5,length=20))
colnames(newdata)<-'Precip'
prednew<-predict.lm(Pmod, newdata=newdata,se.fit=T)
plot(Precip,s1avg$mean[18:36], pch=19,ylab=expression("Establishment rate (20yrs"^-1~")"),xlab=expression("Mean annual precipitation (cm 20yrs"^-1~")"))
text(26,0.47,labels=paste("Correlation=",round(cor(Precip,s1avg$mean[18:36]),2)))
fig_label("B",region="plot", cex=2)
16*40*3
16*40*16
#####Figure 4
pdf("Fig4.pdf",width = 8,height=6)
par(mfrow=c(2,1),mar = c(0.5,6,4.5,.5))
plot(0,0,ylim=c(0,1),xlim=c(1600,1990),xaxt="n", xlab='', ylab=expression("Survival rate (20yrs"^-1~")"))
rect(0, -1000, 1850, 1000, col=adjustcolor("grey",0.3 ), border='white',lwd=2)
rect(1850, -1000, 2050, 1000, col=adjustcolor("coral", 0.2), border='white',lwd=2)
set.seed(100)
for(i in 1:50){
sv<-svariable(x=agedataall20,0.95,backward = F)
sv_mean<-na.omit(decadeavg(sv,var='srate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
sv<-svariable(x=agedataall20,0.95,backward = T)
sv_mean<-na.omit(decadeavg(sv,var='srate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
}
fig_label("A",region="plot", cex=2)
par(mar = c(4.5,6,.5,.5))
plot(0,0,ylim=c(0,.7),xlim=c(1600,1990), ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
rect(0, -1000, 1850, 1000, col=adjustcolor("grey",0.3 ), border='white',lwd=2)
rect(1850, -1000, 2050, 1000, col=adjustcolor("coral", 0.2), border='white',lwd=2)
text(1730,0.65,substitute(paste(bold('Pre E-A Settlement'))))
text(1940,0.65,substitute(paste(bold('Post E-A Settlement'))))
set.seed(100) # for reproducable results
for(i in 1:50){
sv<-svariable(x=agedataall20,0.95,backward = F)
sv_mean<-na.omit(decadeavg(sv,var='brate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2, col='steelblue')
sv<-svariable(x=agedataall20,0.95,backward = T)
sv_mean<-na.omit(decadeavg(sv,var='brate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
}
lines(s1avg$years,s1avg$mean, lwd=2,lty=2)
s.90<-sconstant(agedataall20,srate=.90)
s.90avg<-mvavg(s.90,smoothyears = 20)
lines(s.90avg$years,s.90avg$mean, lwd=2,lty=2, col='coral')
fig_label("B",region="plot", cex=2)
dev.off()
library(boot)
library(RColorBrewer)
library(scales)
library(ggplot2)
library(ggtext)
library(gridExtra)
library(plyr)
library(plotrix)
library(segmented)
source("Functions.R") ###pull in script with functions
agedataall<-read.csv("AgeSt2.csv") ####Load Data
agedataall<-agedataall[-which(agedataall$Census_keep=='n'),]###Remove data after 1940-1960 that are not complete census. Also remove trailing intervals that were not complete (e.g. last census was in 2003 and included trees from 2000-2010)
#####Aggregate data to 20 year intervals#####
bins<-seq(1260,2000,by=20)
agedataall20<-matrix(NA,1,14) ###Matrix that data will be appended to
colnames(agedataall20)<-colnames(agedataall)[-1]
for (z in 1:length(unique(agedataall$Dataset))){ #iterate through datasets
if(agedataall$Interval[agedataall$Dataset==z][1]==20){ ##If dataset interval is already 20 all that is needed is to append that data on the table
agedataall20=rbind.data.frame(agedataall20,agedataall[agedataall$Dataset==z,-1])
}
if(agedataall$Interval[agedataall$Dataset==z][1]==10){ #aggragate data for 10 year intervals
duse<-agedataall[agedataall$Dataset==z,] #extract dataset
tmin<-min(duse$Talign)
tmax<-max(duse$Talign)
if(length(which(tmin==bins))==0){tmin=tmin-10} #if the the dataset starts on an odd interval (1710), move start year back by 10 (e.g. 1700). E.g. Since no trees were observed in 1700-1709, establishment is 0
if(length(which(tmax==bins))>0){tmax=tmax-10} ## if the last year was not a complete 20 year interval (e.g. 1960-1969 not 1960-1979) then we have to cut off the last 10 year interval, making the end 1940-1959. Since 1960-1960 does not include a complete 20 year period it is not an accurate estimate of establshemnt.
zbins<-seq(tmin,tmax+10,20)
for(t in zbins[-1]){ ###Iterate over bins
B<-sum(duse$B[which(duse$Talign>=(t-20) & duse$Talign<(t))]) ##sum data from previous 20 years
new<-t(as.matrix(c(t-20,B,agedataall[agedataall$Dataset==z,][1,4:15]))) #Add back in other info from data
colnames(new)<-colnames(agedataall)[-1]
agedataall20=rbind.data.frame(agedataall20,new) #append
}
}
}
agedataall20<-as.data.frame((agedataall20[-1,])) #Remove NA row
agedataall20$Interval<-20 ##all intervals are now 20 years
agedataall20<-as.data.frame(lapply(agedataall20,unlist)) ##For some reason R makes all the dataframe columns a list, so this fixes that.
agedataall20$CensusOffset<-agedataall20$Time_collected-(agedataall20$Talign+20) ##Calculate new offset (number of years between the end of the interval and when the stands were censused), this is needed for establishment with survival.
######
#####Figure 4
pdf("Fig4.pdf",width = 8,height=6)
par(mfrow=c(2,1),mar = c(0.5,6,4.5,.5))
plot(0,0,ylim=c(0,1),xlim=c(1600,1990),xaxt="n", xlab='', ylab=expression("Survival rate (20yrs"^-1~")"))
rect(0, -1000, 1850, 1000, col=adjustcolor("grey",0.3 ), border='white',lwd=2)
rect(1850, -1000, 2050, 1000, col=adjustcolor("coral", 0.2), border='white',lwd=2)
set.seed(100)
for(i in 1:50){
sv<-svariable(x=agedataall20,0.95,backward = F)
sv_mean<-na.omit(decadeavg(sv,var='srate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
sv<-svariable(x=agedataall20,0.95,backward = T)
sv_mean<-na.omit(decadeavg(sv,var='srate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
}
fig_label("A",region="plot", cex=2)
par(mar = c(4.5,6,.5,.5))
plot(0,0,ylim=c(0,.7),xlim=c(1600,1990), ylab=expression("Establishment rate (20yrs"^-1~")"), xlab='Year (CE)')
rect(0, -1000, 1850, 1000, col=adjustcolor("grey",0.3 ), border='white',lwd=2)
rect(1850, -1000, 2050, 1000, col=adjustcolor("coral", 0.2), border='white',lwd=2)
text(1730,0.65,substitute(paste(bold('Pre E-A Settlement'))))
text(1940,0.65,substitute(paste(bold('Post E-A Settlement'))))
set.seed(100) # for reproducable results
for(i in 1:50){
sv<-svariable(x=agedataall20,0.95,backward = F)
sv_mean<-na.omit(decadeavg(sv,var='brate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2, col='steelblue')
sv<-svariable(x=agedataall20,0.95,backward = T)
sv_mean<-na.omit(decadeavg(sv,var='brate'))
lines(sv_mean$years, sv_mean$mean,lwd=.2,col='steelblue')
}
lines(s1avg$years,s1avg$mean, lwd=2,lty=2)
s.90<-sconstant(agedataall20,srate=.90)
s.90avg<-mvavg(s.90,smoothyears = 20)
lines(s.90avg$years,s.90avg$mean, lwd=2,lty=2, col='coral')
fig_label("B",region="plot", cex=2)
dev.off()
1.4^(1/20)
15/40
900/15
900/15/15
yrs<-match(seq(1760,1940,by=20),s1avg$years)
brate1<-rep(s1avg$mean[which(s1avg$years==1860)],length(yrs))+1 ##Under 100%  survival the population growth rate is establshishment +1
brateall<-s1avg$mean[yrs]+1
Btotal<-diff(c(0.15,0.15*cumprod(brateall))) ##simulations of the populations under observed average (changing) growth rate. Estsblishment is the change in population size when survival is 100%
Bexpg<-diff(c(0.15,0.15*cumprod(brate1))) ##simulations of the populations under constant 1860 growth rate.
Bbrate<-Btotal-Bexpg ##amount of establishment due to changing estab rates is Total minus constant. This assumes any compounding population growth from changing establishment rates get propgated on towards the changing establishment rate estimates.
PBbrate<-Bbrate/Btotal
PBexpg<-Bexpg/Btotal
Percent<-c(PBexpg,PBbrate)
Pdata<-as.data.frame(Percent)
Pdata$Mechanism<-c(rep("Multiplicative growth", length(yrs)),rep("Changing estab. rate", length(yrs)))
Pdata$Year<-rep(s1avg$years[yrs],2)
Pdata$Establishment<-c(Bexpg,Bbrate)
Percent<-c(sum(Bexpg)/sum(Btotal),sum(Bbrate)/sum(Btotal))
Tdata<-as.data.frame(Percent)
Tdata$Mechanism<-c("Multiplicative growth","Changing estab. rate")
Tdata$Year<-rep(1,2)
p1<-ggplot(Pdata, aes(fill=Mechanism, y=Establishment, x=Year)) +
geom_bar(position="stack", stat="identity")+scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+scale_x_continuous(breaks=c(1860,1880, 1900, 1920, 1940))+ylab("Establishment")+xlab("Year (CE)")+theme_bw()+geom_text(x = 1855, y = .19
, width = unit(.8, "inch")
, label = "A"
, color = "black"
, size=6)
# Plot
p2<-ggplot(Pdata, aes(x=Year, y=Percent, fill=Mechanism)) +
geom_area(alpha=0.6 , size=1, colour="white")+scale_fill_manual(values=c('coral','steelblue'))+theme_bw()+theme(legend.position="none")+ylab("Percent contribution")+xlab("Year (CE)")+geom_text(x = 1865, y = 1
, width = unit(.8, "inch")
, label = "B"
, color = "black"
, size=6 )
p3<-ggplot(Tdata, aes(x=Year, y=Percent, fill=Mechanism)) + scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+geom_col()+ xlab("Total contribution")+ylab('')+theme_bw()+theme(axis.text.x=element_text(color='white'),axis.ticks.x=element_blank(),
legend.position="none")+geom_text(x = 0.6, y = 1
, width = unit(.8, "inch")
, label = "C"
, color = "black"
, size=6 )
F3<-grid.arrange(p1,p2,p3,
layout_matrix = rbind(c(1, 1, 1, 1),
c(1, 1 ,1, 1),
c(2,2 ,2 ,3),
c(2,2 ,2, 3))
)
yrs<-match(seq(1700,1940,by=20),s1avg$years)
brate1<-rep(s1avg$mean[which(s1avg$years==1860)],length(yrs))+1 ##Under 100%  survival the population growth rate is establshishment +1
brateall<-s1avg$mean[yrs]+1
Btotal<-diff(c(0.15,0.15*cumprod(brateall))) ##simulations of the populations under observed average (changing) growth rate. Estsblishment is the change in population size when survival is 100%
Bexpg<-diff(c(0.15,0.15*cumprod(brate1))) ##simulations of the populations under constant 1860 growth rate.
Bbrate<-Btotal-Bexpg ##amount of establishment due to changing estab rates is Total minus constant. This assumes any compounding population growth from changing establishment rates get propgated on towards the changing establishment rate estimates.
PBbrate<-Bbrate/Btotal
PBexpg<-Bexpg/Btotal
Percent<-c(PBexpg,PBbrate)
Pdata<-as.data.frame(Percent)
Pdata$Mechanism<-c(rep("Multiplicative growth", length(yrs)),rep("Changing estab. rate", length(yrs)))
Pdata$Year<-rep(s1avg$years[yrs],2)
Pdata$Establishment<-c(Bexpg,Bbrate)
Percent<-c(sum(Bexpg)/sum(Btotal),sum(Bbrate)/sum(Btotal))
Tdata<-as.data.frame(Percent)
Tdata$Mechanism<-c("Multiplicative growth","Changing estab. rate")
Tdata$Year<-rep(1,2)
p1<-ggplot(Pdata, aes(fill=Mechanism, y=Establishment, x=Year)) +
geom_bar(position="stack", stat="identity")+scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+scale_x_continuous(breaks=c(1860,1880, 1900, 1920, 1940))+ylab("Establishment")+xlab("Year (CE)")+theme_bw()+geom_text(x = 1855, y = .19
, width = unit(.8, "inch")
, label = "A"
, color = "black"
, size=6)
# Plot
p2<-ggplot(Pdata, aes(x=Year, y=Percent, fill=Mechanism)) +
geom_area(alpha=0.6 , size=1, colour="white")+scale_fill_manual(values=c('coral','steelblue'))+theme_bw()+theme(legend.position="none")+ylab("Percent contribution")+xlab("Year (CE)")+geom_text(x = 1865, y = 1
, width = unit(.8, "inch")
, label = "B"
, color = "black"
, size=6 )
p3<-ggplot(Tdata, aes(x=Year, y=Percent, fill=Mechanism)) + scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+geom_col()+ xlab("Total contribution")+ylab('')+theme_bw()+theme(axis.text.x=element_text(color='white'),axis.ticks.x=element_blank(),
legend.position="none")+geom_text(x = 0.6, y = 1
, width = unit(.8, "inch")
, label = "C"
, color = "black"
, size=6 )
F3<-grid.arrange(p1,p2,p3,
layout_matrix = rbind(c(1, 1, 1, 1),
c(1, 1 ,1, 1),
c(2,2 ,2 ,3),
c(2,2 ,2, 3))
)
yrs<-match(seq(1700,1940,by=20),s1avg$years)
brate1<-rep(s1avg$mean[which(s1avg$years==1700)],length(yrs))+1 ##Under 100%  survival the population growth rate is establshishment +1
brateall<-s1avg$mean[yrs]+1
Btotal<-diff(c(0.15,0.15*cumprod(brateall))) ##simulations of the populations under observed average (changing) growth rate. Estsblishment is the change in population size when survival is 100%
Bexpg<-diff(c(0.15,0.15*cumprod(brate1))) ##simulations of the populations under constant 1860 growth rate.
Bbrate<-Btotal-Bexpg ##amount of establishment due to changing estab rates is Total minus constant. This assumes any compounding population growth from changing establishment rates get propgated on towards the changing establishment rate estimates.
PBbrate<-Bbrate/Btotal
PBexpg<-Bexpg/Btotal
Percent<-c(PBexpg,PBbrate)
Pdata<-as.data.frame(Percent)
Pdata$Mechanism<-c(rep("Multiplicative growth", length(yrs)),rep("Changing estab. rate", length(yrs)))
Pdata$Year<-rep(s1avg$years[yrs],2)
Pdata$Establishment<-c(Bexpg,Bbrate)
Percent<-c(sum(Bexpg)/sum(Btotal),sum(Bbrate)/sum(Btotal))
Tdata<-as.data.frame(Percent)
Tdata$Mechanism<-c("Multiplicative growth","Changing estab. rate")
Tdata$Year<-rep(1,2)
p1<-ggplot(Pdata, aes(fill=Mechanism, y=Establishment, x=Year)) +
geom_bar(position="stack", stat="identity")+scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+scale_x_continuous(breaks=c(1860,1880, 1900, 1920, 1940))+ylab("Establishment")+xlab("Year (CE)")+theme_bw()+geom_text(x = 1855, y = .19
, width = unit(.8, "inch")
, label = "A"
, color = "black"
, size=6)
# Plot
p2<-ggplot(Pdata, aes(x=Year, y=Percent, fill=Mechanism)) +
geom_area(alpha=0.6 , size=1, colour="white")+scale_fill_manual(values=c('coral','steelblue'))+theme_bw()+theme(legend.position="none")+ylab("Percent contribution")+xlab("Year (CE)")+geom_text(x = 1865, y = 1
, width = unit(.8, "inch")
, label = "B"
, color = "black"
, size=6 )
p3<-ggplot(Tdata, aes(x=Year, y=Percent, fill=Mechanism)) + scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+geom_col()+ xlab("Total contribution")+ylab('')+theme_bw()+theme(axis.text.x=element_text(color='white'),axis.ticks.x=element_blank(),
legend.position="none")+geom_text(x = 0.6, y = 1
, width = unit(.8, "inch")
, label = "C"
, color = "black"
, size=6 )
F3<-grid.arrange(p1,p2,p3,
layout_matrix = rbind(c(1, 1, 1, 1),
c(1, 1 ,1, 1),
c(2,2 ,2 ,3),
c(2,2 ,2, 3))
)
yrs<-match(seq(1700,1940,by=20),s1avg$years)
brate1<-rep(s1avg$mean[which(s1avg$years==1700)],length(yrs))+1 ##Under 100%  survival the population growth rate is establshishment +1
brateall<-s1avg$mean[yrs]+1
Btotal<-diff(c(0.15,0.15*cumprod(brateall))) ##simulations of the populations under observed average (changing) growth rate. Estsblishment is the change in population size when survival is 100%
Bexpg<-diff(c(0.15,0.15*cumprod(brate1))) ##simulations of the populations under constant 1860 growth rate.
Bbrate<-Btotal-Bexpg ##amount of establishment due to changing estab rates is Total minus constant. This assumes any compounding population growth from changing establishment rates get propgated on towards the changing establishment rate estimates.
PBbrate<-Bbrate/Btotal
PBexpg<-Bexpg/Btotal
Percent<-c(PBexpg,PBbrate)
Pdata<-as.data.frame(Percent)
Pdata$Mechanism<-c(rep("Multiplicative growth", length(yrs)),rep("Changing estab. rate", length(yrs)))
Pdata$Year<-rep(s1avg$years[yrs],2)
Pdata$Establishment<-c(Bexpg,Bbrate)
Percent<-c(sum(Bexpg)/sum(Btotal),sum(Bbrate)/sum(Btotal))
Tdata<-as.data.frame(Percent)
Tdata$Mechanism<-c("Multiplicative growth","Changing estab. rate")
Tdata$Year<-rep(1,2)
p1<-ggplot(Pdata, aes(fill=Mechanism, y=Establishment, x=Year)) +
geom_bar(position="stack", stat="identity")+scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+scale_x_continuous(breaks=c(1860,1880, 1900, 1920, 1940))+ylab("Establishment")+xlab("Year (CE)")+theme_bw()+geom_text(x = 1855, y = .19
, width = unit(.8, "inch")
, label = "A"
, color = "black"
, size=6)
# Plot
p2<-ggplot(Pdata, aes(x=Year, y=Percent, fill=Mechanism)) +
geom_area(alpha=0.6 , size=1, colour="white")+scale_fill_manual(values=c('coral','steelblue'))+theme_bw()+theme(legend.position="none")+ylab("Percent contribution")+xlab("Year (CE)")+geom_text(x = 1865, y = 1
, width = unit(.8, "inch")
, label = "B"
, color = "black"
, size=6 )
p3<-ggplot(Tdata, aes(x=Year, y=Percent, fill=Mechanism)) + scale_fill_manual(values=c(alpha('coral',0.7),alpha('steelblue',0.7)))+geom_col()+ xlab("Total contribution")+ylab('')+theme_bw()+theme(axis.text.x=element_text(color='white'),axis.ticks.x=element_blank(),
legend.position="none")+geom_text(x = 0.6, y = 1
, width = unit(.8, "inch")
, label = "C"
, color = "black"
, size=6 )
F3<-grid.arrange(p1,p2,p3,
layout_matrix = rbind(c(1, 1, 1, 1),
c(1, 1 ,1, 1),
c(2,2 ,2 ,3),
c(2,2 ,2, 3))
)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))##set working directory to current file
data = read.csv('data/portal_timeseries.csv')
n<-length(data$NDVI)
#remove last 10
datafit<-data[1:(n-10),] ##
nfit<-length(datafit$NDVI)###Find length of shortened data frame
model<-glm(NDVI[-1]~NDVI[-(nfit)],data=datafit)###Fit glm, indexing removes the first and last years from reponse/explanatory
model
beta<-c(model$coefficients) #extract coefficients from fitted model. this will be used for forecast
#Forecasting function. I chose to nest the loop inside the function. But it would also work to make a loop and just a function solve for the values for a single year.
#yinit is the starting value, t is the number of years the forecast is for.
ARforecast<-function(b0,b1,yinit,t){
yout<-numeric(t)
yout[1]<-yinit
for (i in 2:t){
yout[i]<-b0+b1*yout[i-1]
}
return(yout)
}
Forecast1<-ARforecast(b0=beta[1],b1=beta[2],yinit=datafit$NDVI[nfit],t=11)
par(mfrow=c(2,1))
plot(1:11,Forecast1,ylab='NDVI',xlab='Month', type='l', ylim=c(0,.5))
points(data$NDVI[(n-10):n], col='red')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))##set working directory to current file
data = read.csv('./data/portal_timeseries.csv')
n<-length(data$NDVI)
#remove last 10
datafit<-data[1:(n-10),] ##
nfit<-length(datafit$NDVI)###Find length of shortened data frame
model<-glm(NDVI[-1]~NDVI[-(nfit)],data=datafit)###Fit glm, indexing removes the first and last years from reponse/explanatory
model
beta<-c(model$coefficients) #extract coefficients from fitted model. this will be used for forecast
#Forecasting function. I chose to nest the loop inside the function. But it would also work to make a loop and just a function solve for the values for a single year.
#yinit is the starting value, t is the number of years the forecast is for.
ARforecast<-function(b0,b1,yinit,t){
yout<-numeric(t)
yout[1]<-yinit
for (i in 2:t){
yout[i]<-b0+b1*yout[i-1]
}
return(yout)
}
data = read.csv('../data/portal_timeseries.csv')
n<-length(data$NDVI)
#remove last 10
datafit<-data[1:(n-10),] ##
nfit<-length(datafit$NDVI)###Find length of shortened data frame
model<-glm(NDVI[-1]~NDVI[-(nfit)],data=datafit)###Fit glm, indexing removes the first and last years from reponse/explanatory
model
beta<-c(model$coefficients) #extract coefficients from fitted model. this will be used for forecast
#Forecasting function. I chose to nest the loop inside the function. But it would also work to make a loop and just a function solve for the values for a single year.
#yinit is the starting value, t is the number of years the forecast is for.
ARforecast<-function(b0,b1,yinit,t){
yout<-numeric(t)
yout[1]<-yinit
for (i in 2:t){
yout[i]<-b0+b1*yout[i-1]
}
return(yout)
}
Forecast1<-ARforecast(b0=beta[1],b1=beta[2],yinit=datafit$NDVI[nfit],t=11)
par(mfrow=c(2,1))
plot(1:11,Forecast1,ylab='NDVI',xlab='Month', type='l', ylim=c(0,.5))
points(data$NDVI[(n-10):n], col='red')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))##set working directory to current file
data = read.csv('../data/portal_timeseries.csv')
n<-length(data$NDVI)
#remove last 10
datafit<-data[1:(n-10),] ##
nfit<-length(datafit$NDVI)###Find length of shortened data frame
model<-glm(NDVI[-1]~NDVI[-(nfit)],data=datafit)###Fit glm, indexing removes the first and last years from reponse/explanatory
model
beta<-c(model$coefficients) #extract coefficients from fitted model. this will be used for forecast
#Forecasting function. I chose to nest the loop inside the function. But it would also work to make a loop and just a function solve for the values for a single year.
#yinit is the starting value, t is the number of years the forecast is for.
ARforecast<-function(b0,b1,yinit,t){
yout<-numeric(t)
yout[1]<-yinit
for (i in 2:t){
yout[i]<-b0+b1*yout[i-1]
}
return(yout)
}
Forecast1<-ARforecast(b0=beta[1],b1=beta[2],yinit=datafit$NDVI[nfit],t=11)
par(mfrow=c(2,1))
plot(1:11,Forecast1,ylab='NDVI',xlab='Month', type='l', ylim=c(0,.5))
points(data$NDVI[(n-10):n], col='red')
model2<-glm(NDVI[-1]~NDVI[-(nfit)]+rain[-(nfit)],data=datafit)
model2
raint_1<-data$rain[(n-10):(n-1)]
beta<-c(model2$coefficients)
ARforecastrain<-function(b0,b1,b2,yinit,t){
yout<-numeric(t)
yout[1]<-yinit
for (i in 2:t){
yout[i]<-b0+b1*yout[i-1]+b2*raint_1[i-1]
}
return(yout)
}
Forecast2<-ARforecastrain(b0=beta[1],b1=beta[2],b2=beta[3],yinit=datafit$NDVI[nfit],t=11)
plot(1:11,Forecast2,ylab='NDVI',xlab='Month', type='l',ylim=c(0,.5))
points(data$NDVI[(n-10):n], col='red')
40/(37/365)
